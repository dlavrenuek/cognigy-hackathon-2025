---
description: Description of core game mechanics and game design
globs: 
---
# Project: Shark vs Seal - Voice-Controlled Arcade Game

## Core Game Concept
A 2D two-player browser game built with Kaboom.js where players control characters through voice commands.

## Technologies
TypeScript

## Game Screens

1. Start Screen:
   - Microphone setup and testing area
   - Two separate voice test zones (Shark & Seal)
   - Visual feedback for voice input
   - Play button (only enabled when both mics are working)
   - Basic tutorial/instructions
   
2. Play Screen:
   - Split-screen gameplay initially
   - Merges into single screen during chase
   - Real-time voice input visualization
   - Score/distance indicators
   - Progress towards island (seal's goal)

3. End Screen:
   - Final game state visualization
   - Winner announcement
   - Final positions of shark and seal
   - Play again button
   - Game statistics (distance covered, jumps made, etc.)

## Game Flow
1. Initial Phase:
   - Split-screen gameplay
   - Left side: Shark character
   - Right side: Seal character
   - Both characters automatically swim left to right
   - Players make animal sounds to jump and boost speed
   - Random obstacles require jumping over

2. Merge Phase:
   - Screens merge into single view
   - Seal player: Makes sounds to escape
   - Shark player: Makes sounds to catch up

3. End Conditions:
   - Shark catches seal: Shark victory
   - Seal reaches island: Seal victory

## Technical Stack
- Engine: Kaboom.js
- Audio Processing: Web Audio API
- Voice Recognition: Whisper API
- Platform: Web Browser

## Core Mechanics
- Voice-controlled jumping
- Voice-activated speed boosts
- Obstacle avoidance
- Split-screen to single-screen transition
- Collision detection between characters
- Microphone testing and calibration

## Development Approach
- AI-assisted development
- LLM-based programming
- AI-generated animations and assets

## Team Structure
1. Game Core & Physics
2. Audio & AI Integration
3. UI/UX & Assets